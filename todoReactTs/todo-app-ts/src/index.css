:root {
  --background: #f5f5f5;
  --foreground: #111111;
  --todo-bg: #fff;
  --box-shadow-1: 0 2px 4px 0 rgba(0, 0, 0, 0.2);
  --box-shadow-2: 0 25px 50px 0 rgba(0, 0, 0, 0.1);
  --primary: #b83f45;
  --completed: #949494;
  --completed-bg: #e6e6e6;
  --input-bg: rgba(0, 0, 0, 0.003);
  --border: #ededed;
  --checkbox: #949494;
  --checkbox-checked: #59A193;
  --checkbox-fill: #3EA390;
}

body.dark-mode {
  --background: linear-gradient(135deg, #232526 0%, #414345 100%);
  --foreground: #f8f8fa;
  --todo-bg: #23272f;
  --box-shadow-1: 0 2px 16px 0 rgba(0, 0, 0, 0.7);
  --box-shadow-2: 0 25px 50px 0 rgba(0, 0, 0, 0.5);
  --primary: #ff6b81;
  --completed: #b0b3b8;
  --completed-bg: #23272f;
  --input-bg: rgba(255, 255, 255, 0.01);
  --border: #444a57;
  --checkbox: #b0b3b8;
  --checkbox-checked: #00b894;
  --checkbox-fill: #00cec9;
}

body {
  background: var(--background) !important;
  color: var(--foreground);
  min-height: 100vh;
  /* Por defecto es light. Si quieres dark mode, agrega la clase 'dark-mode' al body. Ejemplo en React (App.tsx):
     useEffect(() => { document.body.classList.add('dark-mode') }, []);
     Para volver a light: document.body.classList.remove('dark-mode')
  */
  transition: background 0.5s;
}

/* Adaptar los colores principales a variables */
.todoapp {
  background: var(--todo-bg);
  box-shadow: var(--box-shadow-1), var(--box-shadow-2);
}

.todoapp h1 {
  color: var(--primary);
}

.todo-list li {
  border-bottom: 1px solid var(--border);
  color: var(--foreground);
  background: var(--todo-bg);
}

.todo-list li.completed label {
  color: var(--completed);
  text-decoration: line-through;
}

.todo-list li label {
  color: var(--foreground);
}

.new-todo {
  background: var(--input-bg);
  color: var(--foreground);
}

.footer {
  border-top: 1px solid var(--border);
  color: var(--foreground);
  background: var(--todo-bg);
}

/* El resto de tu CSS puede seguir igual, pero si hay colores directos, c√°mbialos por variables si quieres que respondan al modo. */
